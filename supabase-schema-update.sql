-- Schema Update Migration for Task 004
-- This script updates the existing schema to match the new requirements

-- ============================================
-- 1. Update reports table
-- ============================================

-- Add HTML content column for rendered reports
ALTER TABLE public.reports 
ADD COLUMN IF NOT EXISTS html_content TEXT;

-- Add individual report sections as JSONB for structured access
-- We'll keep the existing 'content' JSONB for backward compatibility
-- and add specific columns for easier querying

-- ============================================
-- 2. Update scores table - Remove risk_score, add target_score
-- ============================================

-- Add new target_score column
ALTER TABLE public.scores 
ADD COLUMN IF NOT EXISTS target_score INTEGER CHECK (target_score >= 1 AND target_score <= 5);

-- Remove risk_score column if it exists
ALTER TABLE public.scores 
DROP COLUMN IF EXISTS risk_score;

-- Add better column comments for clarity
COMMENT ON COLUMN public.scores.market_score IS '市場の大きさと競合環境 (1-5)';
COMMENT ON COLUMN public.scores.synergy_score IS '三菱地所だからこその勝ち筋があるか (1-5)';
COMMENT ON COLUMN public.scores.target_score IS 'ターゲットと課題の納得感 (1-5)';
COMMENT ON COLUMN public.scores.competitive_score IS '競合優位性 (1-5) - 将来的に削除予定';

-- ============================================
-- 3. Update logs table - Add event_type, remove action
-- ============================================

-- Add event_type column
ALTER TABLE public.logs 
ADD COLUMN IF NOT EXISTS event_type TEXT NOT NULL DEFAULT 'general';

-- Migrate existing action data to event_type
UPDATE public.logs 
SET event_type = action 
WHERE event_type = 'general' AND action IS NOT NULL;

-- Remove action column
ALTER TABLE public.logs 
DROP COLUMN IF EXISTS action;

-- Add check constraint for event_type
ALTER TABLE public.logs 
ADD CONSTRAINT logs_event_type_check 
CHECK (event_type IN ('api_call', 'error', 'performance', 'agent_execution', 'user_action', 'general'));

-- Add index for better performance
CREATE INDEX IF NOT EXISTS idx_logs_event_type ON public.logs(event_type);

-- ============================================
-- 4. Add comments to tables for documentation
-- ============================================

COMMENT ON TABLE public.reports IS 'Business reports generated by AI agents';
COMMENT ON COLUMN public.reports.content IS 'Structured report data (JSONB) containing: idea_title, target, challenges, monetization, market_tam, competitors, mitsubishi_synergy, risks, roadmap';
COMMENT ON COLUMN public.reports.html_content IS 'Rendered HTML version of the report for display';
COMMENT ON COLUMN public.reports.status IS 'Report generation status: pending, processing, completed, failed';

COMMENT ON TABLE public.scores IS 'User evaluations of reports (1:1 relationship with reports)';
COMMENT ON TABLE public.logs IS 'System and user activity logs for observability';
COMMENT ON COLUMN public.logs.event_type IS 'Type of event: api_call, error, performance, agent_execution, user_action, general';
COMMENT ON COLUMN public.logs.details IS 'Event details in JSONB format';
COMMENT ON COLUMN public.logs.tokens_used IS 'Number of API tokens consumed (if applicable)';

-- ============================================
-- 5. Add unique constraint to ensure 1:1 relationship between reports and scores
-- ============================================

-- Add unique constraint on report_id to ensure 1:1 relationship
ALTER TABLE public.scores 
ADD CONSTRAINT scores_report_id_unique 
UNIQUE (report_id);

-- ============================================
-- 6. Update RLS policies if needed
-- ============================================

-- The existing RLS policies should work with the new schema
-- No changes needed for RLS policies

-- ============================================
-- 7. Add indexes for performance
-- ============================================

CREATE INDEX IF NOT EXISTS idx_reports_status ON public.reports(status);
CREATE INDEX IF NOT EXISTS idx_reports_title ON public.reports(title);
CREATE INDEX IF NOT EXISTS idx_logs_event_type_created_at ON public.logs(event_type, created_at);