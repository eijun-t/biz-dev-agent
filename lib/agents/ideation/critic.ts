/**
 * Critic Agent - „Éì„Ç∏„Éç„Çπ„Ç¢„Ç§„Éá„Ç¢Ë©ï‰æ°
 */

import { ChatOpenAI } from '@langchain/openai';
import { 
  BusinessIdea, 
  IdeaEvaluation, 
  EvaluationWeights, 
  EvaluationCriteria,
  ImprovementFeedback 
} from './types';
import { MITSUBISHI_CAPABILITIES } from '../research/utils';

export class CriticAgent {
  private llm: ChatOpenAI;
  private evaluationWeights: EvaluationWeights;
  private evaluationCriteria: EvaluationCriteria;

  constructor(llm: ChatOpenAI) {
    this.llm = llm;
    this.evaluationWeights = {
      market_potential: 35,
      strategic_fit: 35,
      competitive_advantage: 15,
      profitability: 15
    };
    this.evaluationCriteria = this.initializeEvaluationCriteria();
  }

  /**
   * „Éì„Ç∏„Éç„Çπ„Ç¢„Ç§„Éá„Ç¢„ÇíË©ï‰æ°
   */
  async evaluateIdeas(ideas: BusinessIdea[]): Promise<IdeaEvaluation[]> {
    console.log(`üéØ Critic Agent: ${ideas.length}ÂÄã„ÅÆ„Ç¢„Ç§„Éá„Ç¢„ÇíË©ï‰æ°‰∏≠...`);

    const evaluations: IdeaEvaluation[] = [];

    for (const idea of ideas) {
      try {
        const evaluation = await this.evaluateSingleIdea(idea);
        evaluations.push(evaluation);
        console.log(`üìä "${idea.title}": ${evaluation.total_score}ÁÇπ`);
      } catch (error) {
        console.error(`„Ç¢„Ç§„Éá„Ç¢Ë©ï‰æ°„Ç®„É©„Éº (${idea.title}):`, error);
        // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØË©ï‰æ°
        const fallbackEvaluation = this.generateFallbackEvaluation(idea);
        evaluations.push(fallbackEvaluation);
      }
    }

    return evaluations;
  }

  /**
   * Âçò‰∏Ä„ÅÆ„Ç¢„Ç§„Éá„Ç¢„ÇíË©ï‰æ°
   */
  private async evaluateSingleIdea(idea: BusinessIdea): Promise<IdeaEvaluation> {
    const prompt = this.buildEvaluationPrompt(idea);

    const response = await this.llm.invoke(prompt);
    const content = response.content as string;

    // „É¨„Çπ„Éù„É≥„Çπ„Çí„Éë„Éº„Çπ„Åó„Å¶Ë©ï‰æ°ÁµêÊûú„ÇíÊäΩÂá∫
    const evaluation = this.parseEvaluationResponse(content, idea);
    
    return evaluation;
  }

  /**
   * Ë©ï‰æ°Áî®„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÇíÊßãÁØâ
   */
  private buildEvaluationPrompt(idea: BusinessIdea): string {
    return `
„ÅÇ„Å™„Åü„ÅØ‰∫ãÊ•≠Ë©ï‰æ°„ÅÆÂ∞ÇÈñÄÂÆ∂„Åß„Åô„ÄÇ‰ª•‰∏ã„ÅÆ„Éì„Ç∏„Éç„Çπ„Ç¢„Ç§„Éá„Ç¢„ÇíÂé≥Ê†º„Å´Ë©ï‰æ°„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

## Ë©ï‰æ°ÂØæË±°„Éì„Ç∏„Éç„Çπ„Ç¢„Ç§„Éá„Ç¢

**„Çø„Ç§„Éà„É´**: ${idea.title}
**„Çø„Éº„Ç≤„ÉÉ„ÉàÂ∏ÇÂ†¥**: ${idea.target_market}
**Ë™≤È°å**: ${idea.problem_statement}
**„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥**: ${idea.solution}
**„Éì„Ç∏„Éç„Çπ„É¢„Éá„É´**: ${idea.business_model}
**‰∏âËè±Âú∞ÊâÄ„Ç∑„Éä„Ç∏„Éº**: ${idea.mitsubishi_synergy}

## Ë©ï‰æ°Âü∫Ê∫ñ„Å®ÈÖçÁÇπ

### 1. Â∏ÇÂ†¥ÊúâÊúõÊÄß (35ÁÇπÊ∫ÄÁÇπ)
- Â∏ÇÂ†¥Ë¶èÊ®°„Å®ÊàêÈï∑ÊÄß
- È°ßÂÆ¢„Éã„Éº„Ç∫„ÅÆÊòéÁ¢∫ÊÄß
- Â∏ÇÂ†¥ÂèÇÂÖ•„Çø„Ç§„Éü„É≥„Ç∞
- Â∏ÇÂ†¥Êµ∏ÈÄèÂèØËÉΩÊÄß

**Ë©ï‰æ°„Ç¨„Ç§„Éâ:**
- 30-35ÁÇπ: Â∑®Â§ßÂ∏ÇÂ†¥„ÉªÈ´òÊàêÈï∑„ÉªÊòéÁ¢∫„Å™„Éã„Éº„Ç∫
- 20-29ÁÇπ: Â§ß„Åç„Å™Â∏ÇÂ†¥„Éª‰∏≠Á®ãÂ∫¶ÊàêÈï∑„Éª‰∏ÄÂÆö„ÅÆ„Éã„Éº„Ç∫
- 10-19ÁÇπ: ‰∏≠Ë¶èÊ®°Â∏ÇÂ†¥„Éª‰ΩéÊàêÈï∑„ÉªÈôêÂÆöÁöÑ„Éã„Éº„Ç∫
- 0-9ÁÇπ: Â∞è„Åï„Å™Â∏ÇÂ†¥„ÉªÊàêÈï∑ÊÄß‰Ωé„Éª‰∏çÊòéÁ¢∫„Å™„Éã„Éº„Ç∫

### 2. Êà¶Áï•ÈÅ©ÂêàÊÄß (35ÁÇπÊ∫ÄÁÇπ)
- ‰∏âËè±Âú∞ÊâÄ„Ç±„Ç§„Éë„Éì„É™„ÉÜ„Ç£„ÅÆÊ¥ªÁî®Â∫¶
- Êó¢Â≠ò„Ç¢„Çª„ÉÉ„Éà„Å®„ÅÆÁõ∏‰πóÂäπÊûú
- ‰∫ãÊ•≠Âä†ÈÄü„ÅÆÂèØËÉΩÊÄß
- ÁµÑÁπî„ÉªÊñáÂåñ„Å®„ÅÆÈÅ©ÂêàÊÄß

**Ë©ï‰æ°„Ç¨„Ç§„Éâ:**
- 30-35ÁÇπ: Ê•µ„ÇÅ„Å¶È´ò„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÂ§ßÂπÖ„Å™‰∫ãÊ•≠Âä†ÈÄü
- 20-29ÁÇπ: È´ò„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÊòéÁ¢∫„Å™‰∫ãÊ•≠Âä†ÈÄü
- 10-19ÁÇπ: ‰∏≠Á®ãÂ∫¶„ÅÆÁõ∏‰πóÂäπÊûú„ÉªÈôêÂÆöÁöÑ„Å™Âä†ÈÄü
- 0-9ÁÇπ: ‰Ωé„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÂä†ÈÄüÂäπÊûú‰∏çÊòé

### 3. Á´∂‰∫âÂÑ™‰ΩçÊÄß (15ÁÇπÊ∫ÄÁÇπ)
- Â∑ÆÂà•ÂåñË¶ÅÁ¥†„ÅÆÂº∑„Åï
- ÂèÇÂÖ•ÈöúÂ£Å„ÅÆÈ´ò„Åï
- Á´∂Âêà„Å∏„ÅÆÂØæÊäóÂäõ
- ÊåÅÁ∂öÂèØËÉΩÊÄß

**Ë©ï‰æ°„Ç¨„Ç§„Éâ:**
- 13-15ÁÇπ: Âº∑Âõ∫„Å™Â∑ÆÂà•Âåñ„ÉªÈ´ò„ÅÑÂèÇÂÖ•ÈöúÂ£Å
- 10-12ÁÇπ: ‰∏ÄÂÆö„ÅÆÂ∑ÆÂà•Âåñ„Éª‰∏≠Á®ãÂ∫¶„ÅÆÈöúÂ£Å
- 5-9ÁÇπ: ÈôêÂÆöÁöÑÂ∑ÆÂà•Âåñ„Éª‰Ωé„ÅÑÈöúÂ£Å
- 0-4ÁÇπ: Â∑ÆÂà•Âåñ‰∏çË∂≥„ÉªÈöúÂ£Å„Å™„Åó

### 4. ÂèéÁõäÊÄß (15ÁÇπÊ∫ÄÁÇπ)
- ÂèéÁõä„É¢„Éá„É´„ÅÆÊòéÁ¢∫ÊÄß
- Âà©ÁõäÁéá„ÅÆÈ´ò„Åï
- ÂèéÁõä„ÅÆÊåÅÁ∂öÊÄß
- „Çπ„Ç±„Éº„É©„Éì„É™„ÉÜ„Ç£

**Ë©ï‰æ°„Ç¨„Ç§„Éâ:**
- 13-15ÁÇπ: È´òÂèéÁõä„ÉªÈ´òÂà©ÁõäÁéá„ÉªÂº∑„ÅÑ„Çπ„Ç±„Éº„É©„Éì„É™„ÉÜ„Ç£
- 10-12ÁÇπ: ÂÆâÂÆöÂèéÁõä„Éª‰∏≠Á®ãÂ∫¶Âà©ÁõäÁéá„Éª‰∏ÄÂÆö„ÅÆ„Çπ„Ç±„Éº„É´ÊÄß
- 5-9ÁÇπ: ‰ΩéÂèéÁõä„Éª‰ΩéÂà©ÁõäÁéá„ÉªÈôêÂÆöÁöÑ„Çπ„Ç±„Éº„É´ÊÄß
- 0-4ÁÇπ: ÂèéÁõäÊÄß‰∏çÊòé„ÉªÂà©ÁõäÁéá‰Ωé„Éª„Çπ„Ç±„Éº„É´Âõ∞Èõ£

## ‰∏âËè±Âú∞ÊâÄ„ÅÆ‰∏ªË¶Å„Ç±„Ç§„Éë„Éì„É™„ÉÜ„Ç£ÔºàÂèÇËÄÉÔºâ
${MITSUBISHI_CAPABILITIES.map((cap, i) => `${i + 1}. ${cap.name}: ${cap.description}`).join('\n')}

## Âá∫ÂäõÂΩ¢Âºè
‰ª•‰∏ã„ÅÆJSON„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÅßË©ï‰æ°ÁµêÊûú„ÇíÂá∫Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö

\`\`\`json
{
  "scores": {
    "market_potential": [0-35„ÅÆÊï¥Êï∞],
    "strategic_fit": [0-35„ÅÆÊï¥Êï∞],
    "competitive_advantage": [0-15„ÅÆÊï¥Êï∞],
    "profitability": [0-15„ÅÆÊï¥Êï∞]
  },
  "total_score": [ÂêàË®àÁÇπÊï∞],
  "feedback": {
    "strengths": ["Âº∑„Åø1", "Âº∑„Åø2", "Âº∑„Åø3"],
    "weaknesses": ["Âº±„Åø1", "Âº±„Åø2", "Âº±„Åø3"],
    "improvement_suggestions": ["ÊîπÂñÑÊèêÊ°à1", "ÊîπÂñÑÊèêÊ°à2", "ÊîπÂñÑÊèêÊ°à3"]
  },
  "recommendation": "proceed|iterate|reject",
  "evaluation_reason": "Ë©ï‰æ°ÁêÜÁî±„Å®Á∑èÂêàÂà§Êñ≠Ôºà200ÊñáÂ≠ó‰ª•ÂÜÖÔºâ"
}
\`\`\`

**ÈáçË¶Å**: 
- ÂêÑÈ†ÖÁõÆ„ÅØÈÖçÁÇπÁØÑÂõ≤ÂÜÖ„ÅßÂé≥Ê†º„Å´Êé°ÁÇπ
- 70ÁÇπ‰ª•‰∏ä„Åß"proceed"„ÄÅ50-69ÁÇπ„Åß"iterate"„ÄÅ50ÁÇπÊú™Ê∫Ä„Åß"reject"
- Ë©ï‰æ°„ÅØÂÆ¢Ë¶≥ÁöÑ„Åã„Å§Âª∫Ë®≠ÁöÑ„Å´
- ÊîπÂñÑÊèêÊ°à„ÅØÂÖ∑‰ΩìÁöÑ„ÅßÂÆüË°åÂèØËÉΩ„Å´
`;
  }

  /**
   * Ë©ï‰æ°„É¨„Çπ„Éù„É≥„Çπ„Çí„Éë„Éº„Çπ
   */
  private parseEvaluationResponse(content: string, idea: BusinessIdea): IdeaEvaluation {
    try {
      // JSON„Éñ„É≠„ÉÉ„ÇØ„ÇíÊäΩÂá∫
      const jsonMatch = content.match(/```json\s*([\s\S]*?)\s*```/);
      if (!jsonMatch) {
        throw new Error('JSONÂΩ¢Âºè„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      }

      const jsonData = JSON.parse(jsonMatch[1]);
      
      // „Çπ„Ç≥„Ç¢„ÅÆÊ§úË®º
      const scores = jsonData.scores;
      if (!scores) {
        throw new Error('„Çπ„Ç≥„Ç¢ÊÉÖÂ†±„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      }

      // ÂêàË®à„Çπ„Ç≥„Ç¢„ÇíË®àÁÆó
      const totalScore = Object.values(scores).reduce((sum: number, score: any) => sum + (score || 0), 0);

      // Êé®Â•®„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíÊ±∫ÂÆö
      let recommendation: 'proceed' | 'iterate' | 'reject';
      if (totalScore >= 70) {
        recommendation = 'proceed';
      } else if (totalScore >= 50) {
        recommendation = 'iterate';
      } else {
        recommendation = 'reject';
      }

      return {
        idea_id: idea.id,
        scores: {
          market_potential: Math.min(35, Math.max(0, scores.market_potential || 0)),
          strategic_fit: Math.min(35, Math.max(0, scores.strategic_fit || 0)),
          competitive_advantage: Math.min(15, Math.max(0, scores.competitive_advantage || 0)),
          profitability: Math.min(15, Math.max(0, scores.profitability || 0))
        },
        total_score: totalScore,
        feedback: {
          strengths: jsonData.feedback?.strengths || ['Ë©ï‰æ°„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü'],
          weaknesses: jsonData.feedback?.weaknesses || ['ÁâπÂÆö„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü'],
          improvement_suggestions: jsonData.feedback?.improvement_suggestions || ['ÂÖ∑‰ΩìÁöÑ„Å™ÊèêÊ°à„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì']
        },
        recommendation: recommendation,
        evaluation_reason: jsonData.evaluation_reason || 'Ëá™ÂãïË©ï‰æ°„Å´„Çà„ÇäÂà§ÂÆö',
        evaluated_at: new Date().toISOString()
      };
    } catch (error) {
      console.error('Ë©ï‰æ°„É¨„Çπ„Éù„É≥„Çπ„Éë„Éº„Çπ„Ç®„É©„Éº:', error);
      return this.generateFallbackEvaluation(idea);
    }
  }

  /**
   * „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØË©ï‰æ°„ÇíÁîüÊàê
   */
  private generateFallbackEvaluation(idea: BusinessIdea): IdeaEvaluation {
    // Âü∫Êú¨ÁöÑ„Å™Ë©ï‰æ°„ÇíÂÆüÊñΩ
    const marketScore = this.estimateMarketPotential(idea);
    const strategicScore = this.estimateStrategicFit(idea);
    const competitiveScore = Math.floor(Math.random() * 10) + 5; // 5-15
    const profitabilityScore = Math.floor(Math.random() * 10) + 5; // 5-15
    
    const totalScore = marketScore + strategicScore + competitiveScore + profitabilityScore;

    let recommendation: 'proceed' | 'iterate' | 'reject';
    if (totalScore >= 70) {
      recommendation = 'proceed';
    } else if (totalScore >= 50) {
      recommendation = 'iterate';
    } else {
      recommendation = 'reject';
    }

    return {
      idea_id: idea.id,
      scores: {
        market_potential: marketScore,
        strategic_fit: strategicScore,
        competitive_advantage: competitiveScore,
        profitability: profitabilityScore
      },
      total_score: totalScore,
      feedback: {
        strengths: ['„Ç¢„Ç§„Éá„Ç¢„ÅÆÁã¨ÂâµÊÄß', 'Â∏ÇÂ†¥„Éã„Éº„Ç∫„Å∏„ÅÆÂØæÂøú'],
        weaknesses: ['Ë©≥Á¥∞„Å™ÂàÜÊûê„ÅåÂøÖË¶Å', 'ÂÆüÁèæÂèØËÉΩÊÄß„ÅÆÊ§úË®º„ÅåÂøÖË¶Å'],
        improvement_suggestions: ['Â∏ÇÂ†¥Ë™øÊüª„ÅÆÊ∑±Âåñ', '„Éì„Ç∏„Éç„Çπ„É¢„Éá„É´„ÅÆË©≥Á¥∞Âåñ', 'Á´∂ÂêàÂàÜÊûê„ÅÆÂÆüÊñΩ']
      },
      recommendation: recommendation,
      evaluation_reason: '„Ç∑„Çπ„ÉÜ„É†Ëá™ÂãïË©ï‰æ°„Å´„Çà„ÇäÊö´ÂÆöÂà§ÂÆö',
      evaluated_at: new Date().toISOString()
    };
  }

  /**
   * Â∏ÇÂ†¥ÊúâÊúõÊÄß„ÅÆÁ∞°ÊòìÊé®ÂÆö
   */
  private estimateMarketPotential(idea: BusinessIdea): number {
    let score = 15; // „Éô„Éº„Çπ„Çπ„Ç≥„Ç¢
    
    // „Ç≠„Éº„ÉØ„Éº„Éâ„Éô„Éº„Çπ„ÅÆË©ï‰æ°
    const marketKeywords = ['Â§ßË¶èÊ®°', 'ÊàêÈï∑', 'Êã°Â§ß', '„Ç∞„É≠„Éº„Éê„É´', 'ÊÄ•Â¢ó', 'ÈúÄË¶Å'];
    const hasMarketKeywords = marketKeywords.some(keyword => 
      idea.target_market.includes(keyword) || idea.problem_statement.includes(keyword)
    );
    
    if (hasMarketKeywords) score += 10;
    
    // „Çø„Éº„Ç≤„ÉÉ„ÉàÂ∏ÇÂ†¥„ÅÆÂÖ∑‰ΩìÊÄß
    if (idea.target_market.length > 20) score += 5;
    
    // Ë™≤È°å„ÅÆÊòéÁ¢∫ÊÄß
    if (idea.problem_statement.length > 30) score += 5;
    
    return Math.min(35, score);
  }

  /**
   * Êà¶Áï•ÈÅ©ÂêàÊÄß„ÅÆÁ∞°ÊòìÊé®ÂÆö
   */
  private estimateStrategicFit(idea: BusinessIdea): number {
    let score = 10; // „Éô„Éº„Çπ„Çπ„Ç≥„Ç¢
    
    // ‰∏âËè±Âú∞ÊâÄ„Ç±„Ç§„Éë„Éì„É™„ÉÜ„Ç£„Å®„ÅÆÈñ¢ÈÄ£ÊÄß
    const capabilityKeywords = ['‰∏çÂãïÁî£', 'ÈÉΩÂ∏Ç', 'ÈñãÁô∫', '„Éì„É´', 'ÁÆ°ÁêÜ', '„ÉÜ„Éä„É≥„Éà', '„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ', 'ÈáëËûç', 'ÊäïË≥á'];
    const hasSynergy = capabilityKeywords.some(keyword => 
      idea.mitsubishi_synergy.includes(keyword) || idea.business_model.includes(keyword)
    );
    
    if (hasSynergy) score += 15;
    
    // „Ç∑„Éä„Ç∏„Éº„ÅÆÂÖ∑‰ΩìÊÄß
    if (idea.mitsubishi_synergy.length > 30) score += 10;
    
    return Math.min(35, score);
  }

  /**
   * ÊúÄÈÅ©„Å™„Ç¢„Ç§„Éá„Ç¢„ÇíÈÅ∏Êäû
   */
  selectBestIdea(
    ideas: BusinessIdea[], 
    evaluations: IdeaEvaluation[]
  ): { bestIdea: BusinessIdea | null; bestEvaluation: IdeaEvaluation | null } {
    if (ideas.length === 0 || evaluations.length === 0) {
      return { bestIdea: null, bestEvaluation: null };
    }

    // ÊúÄÈ´ò„Çπ„Ç≥„Ç¢„ÅÆË©ï‰æ°„ÇíË¶ã„Å§„Åë„Çã
    const bestEvaluation = evaluations.reduce((best, current) => 
      current.total_score > best.total_score ? current : best
    );

    // ÂØæÂøú„Åô„Çã„Ç¢„Ç§„Éá„Ç¢„ÇíË¶ã„Å§„Åë„Çã
    const bestIdea = ideas.find(idea => idea.id === bestEvaluation.idea_id) || null;

    return { bestIdea, bestEvaluation };
  }

  /**
   * ÂèçÂæ©„ÅåÂøÖË¶Å„Åã„Å©„ÅÜ„Åã„ÇíÂà§Êñ≠
   */
  shouldIterate(
    evaluations: IdeaEvaluation[], 
    currentIteration: number, 
    maxIterations: number
  ): {
    shouldIterate: boolean;
    reason: string;
    feedback?: string;
  } {
    const bestScore = Math.max(...evaluations.map(e => e.total_score));
    const averageScore = evaluations.reduce((sum, e) => sum + e.total_score, 0) / evaluations.length;

    // 70ÁÇπ‰ª•‰∏ä„ÅÆ„Ç¢„Ç§„Éá„Ç¢„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØÂèçÂæ©‰∏çË¶Å
    if (bestScore >= 70) {
      return {
        shouldIterate: false,
        reason: `ÊúÄÈ´ò„Çπ„Ç≥„Ç¢${bestScore}ÁÇπ„ÅßÂü∫Ê∫ñ„ÇíÊ∫Ä„Åü„Åó„Å¶„ÅÑ„Åæ„Åô`
      };
    }

    // ÊúÄÂ§ßÂèçÂæ©Êï∞„Å´ÈÅî„Åó„ÅüÂ†¥Âêà„ÅØÁµÇ‰∫Ü
    if (currentIteration >= maxIterations) {
      return {
        shouldIterate: false,
        reason: `ÊúÄÂ§ßÂèçÂæ©Êï∞(${maxIterations})„Å´ÈÅî„Åó„Åæ„Åó„Åü`
      };
    }

    // ÂèçÂæ©„ÅåÂøÖË¶Å
    const improvementAreas = this.identifyImprovementAreas(evaluations);
    const feedback = this.generateIterationFeedback(evaluations, improvementAreas);

    return {
      shouldIterate: true,
      reason: `ÊúÄÈ´ò„Çπ„Ç≥„Ç¢${bestScore}ÁÇπ„ÅßÂü∫Ê∫ñ(70ÁÇπ)„Å´ÈÅî„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì`,
      feedback: feedback
    };
  }

  /**
   * ÊîπÂñÑ„Åô„Åπ„ÅçÈ†òÂüü„ÇíÁâπÂÆö
   */
  private identifyImprovementAreas(evaluations: IdeaEvaluation[]): string[] {
    const scoringAreas = ['market_potential', 'strategic_fit', 'competitive_advantage', 'profitability'];
    const areaAverages = scoringAreas.map(area => ({
      area,
      average: evaluations.reduce((sum, evaluation) => sum + evaluation.scores[area as keyof typeof evaluation.scores], 0) / evaluations.length,
      maxPossible: area.includes('market_potential') || area.includes('strategic_fit') ? 35 : 15
    }));

    // ÊúÄÂ§ß„Çπ„Ç≥„Ç¢„Å´ÂØæ„Åô„ÇãÈÅîÊàêÁéá„Åå‰Ωé„ÅÑÈ†òÂüü„ÇíÁâπÂÆö
    return areaAverages
      .filter(item => (item.average / item.maxPossible) < 0.6)
      .sort((a, b) => (a.average / a.maxPossible) - (b.average / b.maxPossible))
      .slice(0, 2)
      .map(item => item.area);
  }

  /**
   * ÂèçÂæ©Áî®„ÅÆ„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„ÇíÁîüÊàê
   */
  private generateIterationFeedback(evaluations: IdeaEvaluation[], improvementAreas: string[]): string {
    const commonWeaknesses = evaluations.flatMap(e => e.feedback.weaknesses);
    const commonSuggestions = evaluations.flatMap(e => e.feedback.improvement_suggestions);

    let feedback = '‰ª•‰∏ã„ÅÆÁÇπ„ÇíÊîπÂñÑ„Åó„Å¶„Çà„ÇäÂº∑Âäõ„Å™„Éì„Ç∏„Éç„Çπ„Ç¢„Ç§„Éá„Ç¢„ÇíÁîüÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö\n\n';

    if (improvementAreas.includes('market_potential')) {
      feedback += '**Â∏ÇÂ†¥ÊúâÊúõÊÄß„ÅÆÊîπÂñÑ:**\n';
      feedback += '- „Çà„ÇäÂ§ß„Åç„Å™Â∏ÇÂ†¥Ê©ü‰ºö„Å´ÁÑ¶ÁÇπ„ÇíÂΩì„Å¶„Çã\n';
      feedback += '- Â∏ÇÂ†¥Ë¶èÊ®°„Å®ÊàêÈï∑ÊÄß„ÇíÊòéÁ¢∫„Å´Á§∫„Åô\n';
      feedback += '- È°ßÂÆ¢„Éã„Éº„Ç∫„ÅÆÁ∑äÊÄ•ÊÄß„Å®ÈáçË¶ÅÊÄß„ÇíÂº∑Ë™ø„Åô„Çã\n\n';
    }

    if (improvementAreas.includes('strategic_fit')) {
      feedback += '**Êà¶Áï•ÈÅ©ÂêàÊÄß„ÅÆÊîπÂñÑ:**\n';
      feedback += '- ‰∏âËè±Âú∞ÊâÄ„ÅÆÂÖ∑‰ΩìÁöÑ„Å™„Ç±„Ç§„Éë„Éì„É™„ÉÜ„Ç£„Å®„ÅÆÈÄ£Êê∫„ÇíÂº∑Âåñ\n';
      feedback += '- Êó¢Â≠ò„Ç¢„Çª„ÉÉ„ÉàÔºà‰∏çÂãïÁî£„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÁ≠âÔºâ„ÅÆÊ¥ªÁî®ÊñπÊ≥ï„ÇíË©≥Á¥∞Âåñ\n';
      feedback += '- Áõ∏‰πóÂäπÊûú„Å´„Çà„Çã‰∫ãÊ•≠Âä†ÈÄü„ÅÆÂÖ∑‰Ωì‰æã„ÇíÁ§∫„Åô\n\n';
    }

    if (improvementAreas.includes('competitive_advantage')) {
      feedback += '**Á´∂‰∫âÂÑ™‰ΩçÊÄß„ÅÆÊîπÂñÑ:**\n';
      feedback += '- Áã¨Ëá™ÊÄß„Å®Â∑ÆÂà•ÂåñË¶ÅÁ¥†„ÇíÂº∑Âåñ\n';
      feedback += '- ÂèÇÂÖ•ÈöúÂ£Å„Å®Á´∂ÂêàÂÑ™‰ΩçÊÄß„ÇíÊòéÁ¢∫Âåñ\n\n';
    }

    if (improvementAreas.includes('profitability')) {
      feedback += '**ÂèéÁõäÊÄß„ÅÆÊîπÂñÑ:**\n';
      feedback += '- ÂèéÁõä„É¢„Éá„É´„ÅÆÂÖ∑‰ΩìÂåñ„Å®ÂèéÁõäÊÄßÂêë‰∏ä\n';
      feedback += '- „Ç≥„Çπ„ÉàÊßãÈÄ†„Å®Âà©ÁõäÁéá„ÅÆÊîπÂñÑ\n\n';
    }

    // ÂÖ±ÈÄö„ÅÆÊîπÂñÑÊèêÊ°à„ÇíËøΩÂä†
    if (commonSuggestions.length > 0) {
      const uniqueSuggestions = [...new Set(commonSuggestions)].slice(0, 3);
      feedback += '**ÂÖ±ÈÄöÊîπÂñÑÁÇπ:**\n';
      uniqueSuggestions.forEach(suggestion => {
        feedback += `- ${suggestion}\n`;
      });
    }

    return feedback;
  }

  /**
   * Ë©ï‰æ°Âü∫Ê∫ñ„ÇíÂàùÊúüÂåñ
   */
  private initializeEvaluationCriteria(): EvaluationCriteria {
    return {
      market_potential: {
        description: 'Â∏ÇÂ†¥Ë¶èÊ®°„ÄÅÊàêÈï∑ÊÄß„ÄÅÈ°ßÂÆ¢„Éã„Éº„Ç∫„ÅÆÊòéÁ¢∫ÊÄß„ÄÅÂ∏ÇÂ†¥ÂèÇÂÖ•„Çø„Ç§„Éü„É≥„Ç∞',
        max_score: 35,
        scoring_guide: [
          '30-35ÁÇπ: Â∑®Â§ßÂ∏ÇÂ†¥„ÉªÈ´òÊàêÈï∑„ÉªÊòéÁ¢∫„Å™„Éã„Éº„Ç∫',
          '20-29ÁÇπ: Â§ß„Åç„Å™Â∏ÇÂ†¥„Éª‰∏≠Á®ãÂ∫¶ÊàêÈï∑„Éª‰∏ÄÂÆö„ÅÆ„Éã„Éº„Ç∫',
          '10-19ÁÇπ: ‰∏≠Ë¶èÊ®°Â∏ÇÂ†¥„Éª‰ΩéÊàêÈï∑„ÉªÈôêÂÆöÁöÑ„Éã„Éº„Ç∫',
          '0-9ÁÇπ: Â∞è„Åï„Å™Â∏ÇÂ†¥„ÉªÊàêÈï∑ÊÄß‰Ωé„Éª‰∏çÊòéÁ¢∫„Å™„Éã„Éº„Ç∫'
        ]
      },
      strategic_fit: {
        description: '‰∏âËè±Âú∞ÊâÄ„Ç±„Ç§„Éë„Éì„É™„ÉÜ„Ç£„ÅÆÊ¥ªÁî®Â∫¶„ÄÅÊó¢Â≠ò„Ç¢„Çª„ÉÉ„Éà„Å®„ÅÆÁõ∏‰πóÂäπÊûú„ÄÅ‰∫ãÊ•≠Âä†ÈÄü„ÅÆÂèØËÉΩÊÄß',
        max_score: 35,
        scoring_guide: [
          '30-35ÁÇπ: Ê•µ„ÇÅ„Å¶È´ò„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÂ§ßÂπÖ„Å™‰∫ãÊ•≠Âä†ÈÄü',
          '20-29ÁÇπ: È´ò„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÊòéÁ¢∫„Å™‰∫ãÊ•≠Âä†ÈÄü',
          '10-19ÁÇπ: ‰∏≠Á®ãÂ∫¶„ÅÆÁõ∏‰πóÂäπÊûú„ÉªÈôêÂÆöÁöÑ„Å™Âä†ÈÄü',
          '0-9ÁÇπ: ‰Ωé„ÅÑÁõ∏‰πóÂäπÊûú„ÉªÂä†ÈÄüÂäπÊûú‰∏çÊòé'
        ]
      },
      competitive_advantage: {
        description: 'Â∑ÆÂà•ÂåñË¶ÅÁ¥†„ÅÆÂº∑„Åï„ÄÅÂèÇÂÖ•ÈöúÂ£Å„ÅÆÈ´ò„Åï„ÄÅÁ´∂Âêà„Å∏„ÅÆÂØæÊäóÂäõ„ÄÅÊåÅÁ∂öÂèØËÉΩÊÄß',
        max_score: 15,
        scoring_guide: [
          '13-15ÁÇπ: Âº∑Âõ∫„Å™Â∑ÆÂà•Âåñ„ÉªÈ´ò„ÅÑÂèÇÂÖ•ÈöúÂ£Å',
          '10-12ÁÇπ: ‰∏ÄÂÆö„ÅÆÂ∑ÆÂà•Âåñ„Éª‰∏≠Á®ãÂ∫¶„ÅÆÈöúÂ£Å',
          '5-9ÁÇπ: ÈôêÂÆöÁöÑÂ∑ÆÂà•Âåñ„Éª‰Ωé„ÅÑÈöúÂ£Å',
          '0-4ÁÇπ: Â∑ÆÂà•Âåñ‰∏çË∂≥„ÉªÈöúÂ£Å„Å™„Åó'
        ]
      },
      profitability: {
        description: 'ÂèéÁõä„É¢„Éá„É´„ÅÆÊòéÁ¢∫ÊÄß„ÄÅÂà©ÁõäÁéá„ÅÆÈ´ò„Åï„ÄÅÂèéÁõä„ÅÆÊåÅÁ∂öÊÄß„ÄÅ„Çπ„Ç±„Éº„É©„Éì„É™„ÉÜ„Ç£',
        max_score: 15,
        scoring_guide: [
          '13-15ÁÇπ: È´òÂèéÁõä„ÉªÈ´òÂà©ÁõäÁéá„ÉªÂº∑„ÅÑ„Çπ„Ç±„Éº„É©„Éì„É™„ÉÜ„Ç£',
          '10-12ÁÇπ: ÂÆâÂÆöÂèéÁõä„Éª‰∏≠Á®ãÂ∫¶Âà©ÁõäÁéá„Éª‰∏ÄÂÆö„ÅÆ„Çπ„Ç±„Éº„É´ÊÄß',
          '5-9ÁÇπ: ‰ΩéÂèéÁõä„Éª‰ΩéÂà©ÁõäÁéá„ÉªÈôêÂÆöÁöÑ„Çπ„Ç±„Éº„É´ÊÄß',
          '0-4ÁÇπ: ÂèéÁõäÊÄß‰∏çÊòé„ÉªÂà©ÁõäÁéá‰Ωé„Éª„Çπ„Ç±„Éº„É´Âõ∞Èõ£'
        ]
      }
    };
  }
}